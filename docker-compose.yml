version: "3"
services:
  web:
    container_name: web
    image: nginx
    ports:
      - 80:80
    volumes:
      - ${NGINX_ROOT}/nginx.conf:/etc/nginx/nginx.conf:ro
      - ${NGINX_ROOT}/index.html:/www/root/index.html:ro
    restart: always
    links:
      - sonarr
      - radarr
      - lidarr
      - bazarr
      - jackett
      - deluge
      - vpn
      - jellyfin
  
  autoheal:
    container_name: autoheal
    restart: always
    image: willfarrell/autoheal
    environment:
      - AUTOHEAL_CONTAINER_LABEL=all
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  vpn:
    container_name: vpn
    image: dperson/openvpn-client:latest
    cap_add:
      - net_admin # required to modify network interfaces
    restart: always
    tmpfs:
      - /run
      - /tmp
    volumes:
      - /dev/net:/dev/net:z # tun device
      - ${CONFIG_ROOT}/vpn:/vpn # OpenVPN configuration
    security_opt:
      - label:disable
    command: '-f "" -r 192.168.1.0/24' # enable firewall and route local network traffic
    ports:
      - 8112:8112 # port for deluge web UI to be reachable from local network

  deluge:
    container_name: deluge
    image: lscr.io/linuxserver/deluge
    restart: always
    network_mode: service:vpn # run on the vpn network
    # ports:
    #   - 8112:8112
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
      - DELUGE_LOGLEVEL=info
    volumes:
      - ${MEDIA_ROOT}/Downloads:/media/Downloads # downloads folder
      - ${CONFIG_ROOT}/deluge:/config # config files
    healthcheck:
      test: ["CMD-SHELL", "curl -LSs https://api.ipify.org"]
      interval: "1m0s" 
      timeout: "15s"
      retries: 3

  jackett:
    container_name: jackett
    image: lscr.io/linuxserver/jackett
    restart: always
    ports:
      - 9117:9117
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${MEDIA_ROOT}/Downloads/torrent-blackhole:/media/Downloads/torrent-blackhole # place where to put .torrent files for manual download
      - ${CONFIG_ROOT}/jackett:/config # config files

  sonarr:
    container_name: sonarr
    image: lscr.io/linuxserver/sonarr
    restart: always
    ports:
      - 8989:8989
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${CONFIG_ROOT}/sonarr:/config # config files
      - ${MEDIA_ROOT}:/media
  
  lidarr:
    container_name: lidarr
    image: lscr.io/linuxserver/lidarr
    restart: always
    ports:
      - 8686:8686
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${CONFIG_ROOT}/lidarr:/config # config files
      - ${MEDIA_ROOT}:/media

  radarr:
    container_name: radarr
    image: lscr.io/linuxserver/radarr
    restart: always
    ports:
      - 7878:7878
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${CONFIG_ROOT}/radarr:/config # config files
      - ${MEDIA_ROOT}:/media

  bazarr:
    container_name: bazarr
    image: lscr.io/linuxserver/bazarr
    restart: always
    ports:
      - 6767:6767
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
      - UMASK_SET=022 #optional
    volumes:
      - ${CONFIG_ROOT}/bazarr:/config # config files
      - ${MEDIA_ROOT}:/media
  
  jellyfin:
    image: lscr.io/linuxserver/jellyfin
    container_name: jellyfin
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - ${CONFIG_ROOT}/jellyfin:/config
      - ${MEDIA_ROOT}/TV Shows:/data/tvshows
      - ${MEDIA_ROOT}/Movies:/data/movies
      - ${MEDIA_ROOT}/Music:/data/music
    group_add:
      - 107
      - 44
    devices:
      - /dev/dri/renderD128:/dev/dri/renderD128
      - /dev/dri/card0:/dev/dri/card0
    ports:
      - 8096:8096
      - 8920:8920 #optional
      - 7359:7359/udp #optional
      - 1900:1900/udp #optional
    deploy:
      resources:
        limits:
          memory: 2.5G
    restart: unless-stopped
